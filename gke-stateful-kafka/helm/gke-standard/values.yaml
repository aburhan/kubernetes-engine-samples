global:
  imageRegistry: "us-docker.pkg.dev/<YOUR_PROJECT>/main"
  storageClass: premium-rwo-retain-zonal
kafka:
  image:
    tag: 3.2.1
  auth:
    clientProtocol: mtls
    interBrokerProtocol: mtls
    tls:
      type: pem
      existingSecrets: ["kafka-pem-0","kafka-pem-1","kafka-pem-2"]
  replicaCount: 3
  nodeAffinityPreset:
    type: hard
    key: app.stateful/component
    values:
    - kafka-broker
  tolerations:
  - key: "app.stateful/component"
    operator: "Equal"
    value: "kafka-broker"
  pdb:
    create: true
    maxUnavailable: 1
  logsDirs: /bitnami/kafka/logs
  persistence:
    size: 1000Gi
  heapOpts: -Xmx4096m -Xms4096m
  metrics:
    kafka:
      enabled: true
      image:
        tag: 1.6.0
      certificatesSecret: client-pem
      tlsCert: tls.crt
      tlsKey: tls.key
      tlsCaCert: ca.crt
    jmx:
      enabled: true
      image:
        tag: 0.17.0
    serviceMonitor:
      enabled: true
      namespace: monitoring
      labels:
        release: monitoring-stack
  zookeeper:
    image:
      tag: 3.8.0
    replicaCount: 3
    tls:
      client:
        enabled: true
        auth: want
        existingSecret: kafka-zookeeper-client-certs
        passwordsSecretName: kafka-zookeeper-client-certs-pass
    nodeAffinityPreset:
      type: hard
      key: app.stateful/component
      values:
        - zookeeper
    tolerations:
      - key: "app.stateful/component"
        operator: "Equal"
        value: "zookeeper"
    pdb:
      create: true
      maxUnavailable: 1
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        namespace: monitoring
        additionalLabels:
          release: monitoring-stack
gkeBackup:
  enabled: true
  protectedApplications:
  - name: kafka
    components:
      - name: kafka-cluster
        resourceKind: StatefulSet
        resourceNames: ["kafka"]
        strategy:
          type: BackupAllRestoreAll
          backupAllRestoreAll: {}
  - name: zookeeper
    components:
      - name: zookeeper
        resourceKind: StatefulSet
        resourceNames: ["kafka-zookeeper"]
        strategy:
          type: BackupAllRestoreAll
          backupAllRestoreAll: {}
storageClass:
  create: true
  name: premium-rwo-retain-zonal
  parameters:
    type: pd-ssd